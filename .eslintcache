[{"D:\\0.Suhrobs-personal-file\\0.My-project-file\\Backend-Advence\\2.React-Bootcamp\\infab.us\\src\\index.js":"1","D:\\0.Suhrobs-personal-file\\0.My-project-file\\Backend-Advence\\2.React-Bootcamp\\infab.us\\src\\reportWebVitals.js":"2","D:\\0.Suhrobs-personal-file\\0.My-project-file\\Backend-Advence\\2.React-Bootcamp\\infab.us\\src\\users-base\\users.js":"3","D:\\0.Suhrobs-personal-file\\0.My-project-file\\Backend-Advence\\2.React-Bootcamp\\infab.us\\src\\assets\\pdp-mini-logo.js":"4","D:\\0.Suhrobs-personal-file\\0.My-project-file\\Backend-Advence\\2.React-Bootcamp\\infab.us\\src\\assets\\pdp-logo.js":"5","D:\\0.Suhrobs-personal-file\\0.My-project-file\\Backend-Advence\\2.React-Bootcamp\\infab.us\\src\\architecture.directory\\DashboardRoot.js":"6","D:\\0.Suhrobs-personal-file\\0.My-project-file\\Backend-Advence\\2.React-Bootcamp\\infab.us\\src\\architecture.directory\\App.js":"7","D:\\0.Suhrobs-personal-file\\0.My-project-file\\Backend-Advence\\2.React-Bootcamp\\infab.us\\src\\architecture.directory\\MentorPanelChild.js":"8","D:\\0.Suhrobs-personal-file\\0.My-project-file\\Backend-Advence\\2.React-Bootcamp\\infab.us\\src\\architecture.directory\\DrawerNavBar.js":"9","D:\\0.Suhrobs-personal-file\\0.My-project-file\\Backend-Advence\\2.React-Bootcamp\\infab.us\\src\\architecture.directory\\DashboardRoute.js":"10","D:\\0.Suhrobs-personal-file\\0.My-project-file\\Backend-Advence\\2.React-Bootcamp\\infab.us\\src\\architecture.directory\\MentorPanelControl.js":"11","D:\\0.Suhrobs-personal-file\\0.My-project-file\\Backend-Advence\\2.React-Bootcamp\\infab.us\\src\\architecture.directory\\ChatAreaMain.js":"12","D:\\0.Suhrobs-personal-file\\0.My-project-file\\Backend-Advence\\2.React-Bootcamp\\infab.us\\src\\architecture.directory\\MentorPageChatArea.js":"13","D:\\0.Suhrobs-personal-file\\0.My-project-file\\Backend-Advence\\2.React-Bootcamp\\infab.us\\src\\architecture.directory\\ChatAreaFooterForm.js":"14","D:\\0.Suhrobs-personal-file\\0.My-project-file\\Backend-Advence\\2.React-Bootcamp\\infab.us\\src\\architecture.directory\\Drawer.js":"15","D:\\0.Suhrobs-personal-file\\0.My-project-file\\Backend-Advence\\2.React-Bootcamp\\infab.us\\src\\architecture.directory\\styles\\drawerWidth.js":"16","D:\\0.Suhrobs-personal-file\\0.My-project-file\\Backend-Advence\\2.React-Bootcamp\\infab.us\\src\\architecture.directory\\ChatAreaListPanel.js":"17","D:\\0.Suhrobs-personal-file\\0.My-project-file\\Backend-Advence\\2.React-Bootcamp\\infab.us\\src\\users-base\\faker.js":"18","D:\\0.Suhrobs-personal-file\\0.My-project-file\\Backend-Advence\\2.React-Bootcamp\\infab.us\\src\\architecture.directory\\TemplatePage.js":"19","D:\\0.Suhrobs-personal-file\\0.My-project-file\\Backend-Advence\\2.React-Bootcamp\\infab.us\\src\\architecture.directory\\UsersList.js":"20"},{"size":801,"mtime":1613694977715,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"22"},{"size":4563,"mtime":1613733540465,"results":"24","hashOfConfig":"22"},{"size":816,"mtime":1613395314415,"results":"25","hashOfConfig":"22"},{"size":4691,"mtime":1613395174627,"results":"26","hashOfConfig":"22"},{"size":1421,"mtime":1613730984025,"results":"27","hashOfConfig":"22"},{"size":15825,"mtime":1613731380065,"results":"28","hashOfConfig":"22"},{"size":3833,"mtime":1613732730653,"results":"29","hashOfConfig":"22"},{"size":2979,"mtime":1613649063257,"results":"30","hashOfConfig":"22"},{"size":5475,"mtime":1613731384922,"results":"31","hashOfConfig":"22"},{"size":9911,"mtime":1613731355312,"results":"32","hashOfConfig":"22"},{"size":1141,"mtime":1613731862874,"results":"33","hashOfConfig":"22"},{"size":3570,"mtime":1613732010350,"results":"34","hashOfConfig":"22"},{"size":3150,"mtime":1613636141702,"results":"35","hashOfConfig":"22"},{"size":10918,"mtime":1613696111407,"results":"36","hashOfConfig":"22"},{"size":97,"mtime":1613647062579,"results":"37","hashOfConfig":"22"},{"size":12745,"mtime":1613734467452,"results":"38","hashOfConfig":"22"},{"size":56,"mtime":1612424269778,"results":"39","hashOfConfig":"22"},{"size":1953,"mtime":1613625789363,"results":"40","hashOfConfig":"22"},{"size":2156,"mtime":1613731448474,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"18ydc0w",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\0.Suhrobs-personal-file\\0.My-project-file\\Backend-Advence\\2.React-Bootcamp\\infab.us\\src\\index.js",[],["87","88"],"D:\\0.Suhrobs-personal-file\\0.My-project-file\\Backend-Advence\\2.React-Bootcamp\\infab.us\\src\\reportWebVitals.js",[],["89","90"],"D:\\0.Suhrobs-personal-file\\0.My-project-file\\Backend-Advence\\2.React-Bootcamp\\infab.us\\src\\users-base\\users.js",["91"],"D:\\0.Suhrobs-personal-file\\0.My-project-file\\Backend-Advence\\2.React-Bootcamp\\infab.us\\src\\assets\\pdp-mini-logo.js",[],"D:\\0.Suhrobs-personal-file\\0.My-project-file\\Backend-Advence\\2.React-Bootcamp\\infab.us\\src\\assets\\pdp-logo.js",[],"D:\\0.Suhrobs-personal-file\\0.My-project-file\\Backend-Advence\\2.React-Bootcamp\\infab.us\\src\\architecture.directory\\DashboardRoot.js",["92","93","94"],"D:\\0.Suhrobs-personal-file\\0.My-project-file\\Backend-Advence\\2.React-Bootcamp\\infab.us\\src\\architecture.directory\\App.js",["95","96","97","98","99","100"],"D:\\0.Suhrobs-personal-file\\0.My-project-file\\Backend-Advence\\2.React-Bootcamp\\infab.us\\src\\architecture.directory\\MentorPanelChild.js",[],"D:\\0.Suhrobs-personal-file\\0.My-project-file\\Backend-Advence\\2.React-Bootcamp\\infab.us\\src\\architecture.directory\\DrawerNavBar.js",["101"],"import React, { Component } from 'react';\r\nimport classNames from 'clsx';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Box from '@material-ui/core/Box';\r\nimport NotificationIcon from '@material-ui/icons/Notifications';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport { drawerWidth } from './styles/drawerWidth';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n    drawerAppBar: {\r\n        boxShadow: 'none',\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        })\r\n    },\r\n    drawerAppBarShift: {\r\n        boxShadow: 'none !important',\r\n        width: `calc(100% - 70px)`,\r\n        marginLeft: '70px !important',\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        })\r\n    },\r\n    box: {\r\n        marginLeft: 'auto'\r\n    },\r\n    authorAvatar: {\r\n        padding: '10px'\r\n    },\r\n    authorName: {\r\n        flexGrow: 1\r\n    },\r\n})\r\n\r\nclass DrawerNavBar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        const { classes, status} = this.props;\r\n        const drawer = status === \"open\";\r\n        return (\r\n            <AppBar\r\n                color={'inherit'}\r\n                position={'static'}\r\n                className={classNames(classes.drawerAppBar, {\r\n                    [classes.drawerAppBarShift]: !drawer,\r\n                })}\r\n            >\r\n                <Toolbar position={'static'}>\r\n                    <Typography\r\n                        variant={'h6'}\r\n                        className={classes.authorName}\r\n                    >\r\n                        Michel Bernard\r\n                    </Typography>\r\n                    <Box className={classes.box}>\r\n                        <IconButton className={classes.authorAvatar}>\r\n                            <PersonOutlineIcon/>\r\n                        </IconButton>\r\n                        <IconButton>\r\n                            <Badge\r\n                                badgeContent={'6'}\r\n                                color={'secondary'}\r\n                            >\r\n                                <NotificationIcon/>\r\n                            </Badge>\r\n                        </IconButton>\r\n                    </Box>\r\n                </Toolbar>\r\n            </AppBar>\r\n        )\r\n    }\r\n}\r\nexport default withStyles(styles)(DrawerNavBar);","D:\\0.Suhrobs-personal-file\\0.My-project-file\\Backend-Advence\\2.React-Bootcamp\\infab.us\\src\\architecture.directory\\DashboardRoute.js",["102","103","104","105"],"D:\\0.Suhrobs-personal-file\\0.My-project-file\\Backend-Advence\\2.React-Bootcamp\\infab.us\\src\\architecture.directory\\MentorPanelControl.js",["106","107"],"D:\\0.Suhrobs-personal-file\\0.My-project-file\\Backend-Advence\\2.React-Bootcamp\\infab.us\\src\\architecture.directory\\ChatAreaMain.js",["108","109","110"],"D:\\0.Suhrobs-personal-file\\0.My-project-file\\Backend-Advence\\2.React-Bootcamp\\infab.us\\src\\architecture.directory\\MentorPageChatArea.js",[],"D:\\0.Suhrobs-personal-file\\0.My-project-file\\Backend-Advence\\2.React-Bootcamp\\infab.us\\src\\architecture.directory\\ChatAreaFooterForm.js",["111"],"import React, { Component } from 'react';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CameraIcon from \"@material-ui/icons/LinkedCamera\";\r\nimport GalleryIcon from \"@material-ui/icons/Image\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport SendFileIcon from \"@material-ui/icons/Description\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport EmojiIcon from \"@material-ui/icons/Mood\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n    chatAreaFooterForm: {\r\n        display: 'flex',\r\n        borderTop: '2px solid #eef2f4',\r\n        width: '100%',\r\n        padding: '10px 20px',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '#fff',\r\n        position: 'sticky',\r\n        bottom: 0,\r\n        left: 0,\r\n        '& .chat-footer-content': {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'space-around',\r\n            '& .chat-footer-item': {\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                marginLeft: '10px'\r\n            },\r\n            '& .chat-emoji': {\r\n                marginLeft: '20px'\r\n            }\r\n        },\r\n        '& .chat-footer-input': {\r\n            width: '80%',\r\n        }\r\n    },\r\n    chatInput: {\r\n        width: '100%',\r\n        marginLeft: '10px'\r\n    }\r\n});\r\n\r\nfunction ChatAreaFooterForm({classes}) {\r\n    return (\r\n        <div className={classes.chatAreaFooterForm}>\r\n            <div className={'chat-footer-content'}>\r\n                <div className={'chat-footer-item'}>\r\n                    <IconButton size={'small'}>\r\n                        <CameraIcon/>\r\n                    </IconButton>\r\n                </div>\r\n                <div className={'chat-footer-item'}>\r\n                    <IconButton size={'small'}>\r\n                        <GalleryIcon/>\r\n                    </IconButton>\r\n                </div>\r\n                <div className={'chat-footer-item'}>\r\n                    <IconButton size={'small'}>\r\n                        <AddCircleIcon/>\r\n                    </IconButton>\r\n                </div>\r\n                <div className={'chat-footer-item'}>\r\n                    <IconButton size={'small'}>\r\n                        <SendFileIcon/>\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n            <div className={'chat-footer-input'}>\r\n                <TextField\r\n                    label={'send message here'}\r\n                    className={classes.chatInput}\r\n                    margin={'dense'}\r\n                    variant={'outlined'}\r\n                    multiline\r\n                />\r\n            </div>\r\n            <div className={'chat-footer-content'}>\r\n                <div className={'chat-footer-item chat-emoji'}>\r\n                    <IconButton size={'small'}>\r\n                        <EmojiIcon/>\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default withStyles(styles)(ChatAreaFooterForm);","D:\\0.Suhrobs-personal-file\\0.My-project-file\\Backend-Advence\\2.React-Bootcamp\\infab.us\\src\\architecture.directory\\Drawer.js",["112"],"import React, { Component } from 'react';\r\nimport classNames from 'clsx';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport CoursesIcon from '@material-ui/icons/ViewCarousel';\r\nimport ChatIcon from '@material-ui/icons/Sms';\r\nimport DevicesIcon from '@material-ui/icons/Devices';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport PushHomePageIcon from '@material-ui/icons/ExitToApp';\r\nimport LogoutPlatformIcon from '@material-ui/icons/PowerSettingsNew';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport { drawerWidth } from './styles/drawerWidth';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n    drawer: {\r\n        overflow: 'hidden'\r\n    },\r\n    drawerAppBar: {\r\n        boxShadow: 'none',\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        })\r\n    },\r\n    drawerAppBarShift: {\r\n        boxShadow: 'none !important',\r\n        width: `calc(100% - 70px)`,\r\n        marginLeft: '70px !important',\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        })\r\n    },\r\n    drawerPaper: {\r\n        overflowX: 'hidden',\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerStatus: {\r\n        width: '70px !important',\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    drawerContent: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        margin:'4px 2px 4px',\r\n        padding: '10px 10px'\r\n    },\r\n    drawerList: {\r\n        overflowY: 'auto',\r\n        overflowX: 'hidden',\r\n        padding: '5px 5px 2px',\r\n        paddingBottom: '4rem'\r\n    },\r\n    drawerListIcon: {\r\n        padding: '5px'\r\n    },\r\n    listMenu: {\r\n        marginTop: '5rem'\r\n    },\r\n    drawerControlDivider: {\r\n        position: 'absolute',\r\n        bottom: 0,\r\n        width: '100%',\r\n        backgroundColor: '#fff',\r\n        border: '1px solid #f8f8f8'\r\n    },\r\n    drawerControl: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n});\r\n\r\nclass DrawerCore extends Component{\r\n    static defaultProps = {\r\n        defaultDuration: 986.6,\r\n        closeDuration: 1165\r\n    }\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showText: true\r\n        }\r\n        this.handleSubmitDrawerStatus = this.handleSubmitDrawerStatus.bind(this);\r\n        this.changeDrawerStatusWithMouseEvent = this.changeDrawerStatusWithMouseEvent.bind(this);\r\n        this.closeDrawerWithMouseLeave = this.closeDrawerWithMouseLeave.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        console.log('DASHBOARD DRAWER HERE')\r\n    }\r\n    handleSubmitDrawerStatus() {\r\n        this.props.handleChangeDrawerStatus(\r\n            this.props.status === \"open\" ? \"close\" : \"open\"\r\n        );\r\n    }\r\n    changeDrawerStatusWithMouseEvent(mouseEvent) {\r\n        setTimeout(() => {\r\n            this.props.handleChangeDrawerStatus(\"open\");\r\n        }, this.props.defaultDuration);\r\n    }\r\n    closeDrawerWithMouseLeave(leaveEvent) {\r\n        setTimeout(() => {\r\n            this.props.handleChangeDrawerStatus(\"close\");\r\n        }, this.props.closeDuration);\r\n    }\r\n    pushTextStatus = (event, sec) => {\r\n        // setTimeout(() => {\r\n        //     this.setState({showText: event});\r\n        // }, sec);\r\n    }\r\n    componentDidUpdate() {\r\n        console.log('update drawer status')\r\n        if(this.props.status === \"open\") {\r\n            this.pushTextStatus(true, 500);\r\n        } else {\r\n            this.pushTextStatus(false, 0);\r\n        }\r\n    }\r\n    render() {\r\n        const { classes, status } = this.props;\r\n        const { showText } = this.state;\r\n        const drawer = status === \"open\";\r\n        return (\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant={'permanent'}\r\n                className={classNames({\r\n                    [classes.drawerPaper]: drawer,\r\n                    [classes.drawerStatus]: !drawer,\r\n                })}\r\n                classes={{\r\n                    paper: classNames({\r\n                        [classes.drawerPaper]: drawer,\r\n                        [classes.drawerStatus]: !drawer,\r\n                    }),\r\n                }}\r\n                anchor={'left'}\r\n                position={'static'}\r\n            >\r\n                <div className={\r\n                    `${classes.toolbar}\r\n                    ${classes.drawerContent}`\r\n                }\r\n                >\r\n                    {/* { drawer\r\n                            ? <PdpLogo/>\r\n                            : <PdpMiniLogo/>\r\n                        } */}\r\n                </div>\r\n                <Divider/>\r\n                <List \r\n                    className={classes.drawerList}\r\n                    // onMouseOver={this.changeDrawerStatusWithMouseEvent}\r\n                    // onMouseLeave={this.closeDrawerWithMouseLeave}Z\r\n                >\r\n                    <ListItem\r\n                        button\r\n                        className={classes.drawerListItem}\r\n                    >\r\n                        <ListItemIcon className={classes.drawerListIcon}>\r\n                            <DashboardIcon/>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={showText && 'Dashboard'}/>\r\n                    </ListItem>\r\n                    <ListItem\r\n                        button\r\n                        className={classes.drawerListItem}\r\n                    >\r\n                        <ListItemIcon className={classes.drawerListIcon}>\r\n                            <CoursesIcon/>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={showText && 'All Courses'}/>\r\n                    </ListItem>\r\n                    <ListItem\r\n                        button\r\n                        className={classes.drawerListItem}\r\n                    >\r\n                        <ListItemIcon className={classes.drawerListIcon}>\r\n                            <ChatIcon/>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={showText && 'Mentors Page'}/>\r\n                    </ListItem>\r\n                    <ListItem\r\n                        button\r\n                        className={classes.drawerListItem}\r\n                    >\r\n                        <ListItemIcon className={classes.drawerListIcon}>\r\n                            <DevicesIcon/>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={showText && 'Devices'}/>\r\n                    </ListItem>\r\n                    <ListItem\r\n                        button\r\n                        className={classes.drawerListItem}\r\n                    >\r\n                        <ListItemIcon className={classes.drawerListIcon}>\r\n                            <VideocamIcon/>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={showText && 'Zoom'}/>\r\n                    </ListItem>\r\n                    <ListItem\r\n                        button\r\n                        className={classes.drawerListItem}\r\n                    >\r\n                        <ListItemIcon className={classes.drawerListIcon}>\r\n                            <SettingsIcon/>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={showText && 'Settings'}/>\r\n                    </ListItem>\r\n                    <Grid\r\n                        item\r\n                        className={classes.listMenu}\r\n                    >\r\n                        <ListItem\r\n                            button\r\n                            className={classes.drawerListItem}\r\n                        >\r\n                            <ListItemIcon className={classes.drawerListIcon}>\r\n                                <PushHomePageIcon/>\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={showText && 'Go Home Page'}/>\r\n                        </ListItem>\r\n                        <ListItem\r\n                            button\r\n                            className={classes.drawerListItem}\r\n                        >\r\n                            <ListItemIcon className={classes.drawerListIcon}>\r\n                                <LogoutPlatformIcon/>\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={showText && 'Logout'}/>\r\n                        </ListItem>\r\n                    </Grid>\r\n                </List>\r\n                <div className={classes.drawerControlDivider}>\r\n                    <Grid\r\n                        item\r\n                        direction={'column'}\r\n                        justify={'center'}\r\n                        alignItems={'center'}\r\n                        className={classes.drawerControl}\r\n                    >\r\n                        <Tooltip\r\n                            title={!drawer ?'open' : 'close'}\r\n                            placement={'top'}\r\n                        >\r\n                            <IconButton\r\n                                onClick={this.handleSubmitDrawerStatus}\r\n                            >\r\n                                { !drawer\r\n                                    ? <ChevronRightIcon/>\r\n                                    : <ChevronLeftIcon/>\r\n                                }\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </Grid>\r\n                </div>\r\n            </Drawer>\r\n        )\r\n    }\r\n}\r\nexport default withStyles(styles)(DrawerCore);","D:\\0.Suhrobs-personal-file\\0.My-project-file\\Backend-Advence\\2.React-Bootcamp\\infab.us\\src\\architecture.directory\\styles\\drawerWidth.js",[],"D:\\0.Suhrobs-personal-file\\0.My-project-file\\Backend-Advence\\2.React-Bootcamp\\infab.us\\src\\architecture.directory\\ChatAreaListPanel.js",["113","114","115","116","117"],"D:\\0.Suhrobs-personal-file\\0.My-project-file\\Backend-Advence\\2.React-Bootcamp\\infab.us\\src\\users-base\\faker.js",[],"D:\\0.Suhrobs-personal-file\\0.My-project-file\\Backend-Advence\\2.React-Bootcamp\\infab.us\\src\\architecture.directory\\TemplatePage.js",[],"D:\\0.Suhrobs-personal-file\\0.My-project-file\\Backend-Advence\\2.React-Bootcamp\\infab.us\\src\\architecture.directory\\UsersList.js",["118","119"],{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"120","replacedBy":"124"},{"ruleId":"122","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":11,"column":24,"nodeType":"128","messageId":"129","endLine":11,"endColumn":73},{"ruleId":"130","severity":1,"message":"131","line":8,"column":7,"nodeType":"132","messageId":"133","endLine":8,"endColumn":18},{"ruleId":"134","severity":1,"message":"135","line":19,"column":5,"nodeType":"136","messageId":"137","endLine":21,"endColumn":6},{"ruleId":"130","severity":1,"message":"138","line":32,"column":15,"nodeType":"132","messageId":"133","endLine":32,"endColumn":21},{"ruleId":"130","severity":1,"message":"139","line":2,"column":25,"nodeType":"132","messageId":"133","endLine":2,"endColumn":33},{"ruleId":"130","severity":1,"message":"140","line":3,"column":10,"nodeType":"132","messageId":"133","endLine":3,"endColumn":25},{"ruleId":"130","severity":1,"message":"141","line":3,"column":27,"nodeType":"132","messageId":"133","endLine":3,"endColumn":40},{"ruleId":"130","severity":1,"message":"142","line":185,"column":10,"nodeType":"132","messageId":"133","endLine":185,"endColumn":23},{"ruleId":"143","severity":1,"message":"144","line":205,"column":26,"nodeType":"145","messageId":"146","endLine":280,"endColumn":32},{"ruleId":"143","severity":1,"message":"144","line":281,"column":25,"nodeType":"145","messageId":"146","endLine":301,"endColumn":66},{"ruleId":"134","severity":1,"message":"135","line":46,"column":5,"nodeType":"136","messageId":"137","endLine":48,"endColumn":6},{"ruleId":"134","severity":1,"message":"135","line":55,"column":5,"nodeType":"136","messageId":"137","endLine":57,"endColumn":6},{"ruleId":"130","severity":1,"message":"147","line":66,"column":13,"nodeType":"132","messageId":"133","endLine":66,"endColumn":21},{"ruleId":"130","severity":1,"message":"148","line":67,"column":13,"nodeType":"132","messageId":"133","endLine":67,"endColumn":25},{"ruleId":"149","severity":1,"message":"150","line":118,"column":78,"nodeType":"151","endLine":120,"endColumn":37},{"ruleId":"152","severity":1,"message":"153","line":131,"column":8,"nodeType":"154","endLine":131,"endColumn":35,"suggestions":"155"},{"ruleId":"152","severity":1,"message":"156","line":139,"column":8,"nodeType":"154","endLine":139,"endColumn":21,"suggestions":"157"},{"ruleId":"134","severity":1,"message":"135","line":4,"column":5,"nodeType":"136","messageId":"137","endLine":6,"endColumn":6},{"ruleId":"130","severity":1,"message":"158","line":8,"column":17,"nodeType":"132","messageId":"133","endLine":8,"endColumn":24},{"ruleId":"130","severity":1,"message":"159","line":8,"column":26,"nodeType":"132","messageId":"133","endLine":8,"endColumn":31},{"ruleId":"130","severity":1,"message":"160","line":1,"column":17,"nodeType":"132","messageId":"133","endLine":1,"endColumn":26},{"ruleId":"161","severity":1,"message":"162","line":150,"column":17,"nodeType":"163","endLine":153,"endColumn":20},{"ruleId":"130","severity":1,"message":"164","line":102,"column":12,"nodeType":"132","messageId":"133","endLine":102,"endColumn":26},{"ruleId":"130","severity":1,"message":"165","line":102,"column":28,"nodeType":"132","messageId":"133","endLine":102,"endColumn":46},{"ruleId":"130","severity":1,"message":"166","line":173,"column":11,"nodeType":"132","messageId":"133","endLine":173,"endColumn":21},{"ruleId":"167","severity":1,"message":"168","line":177,"column":41,"nodeType":"169","messageId":"170","endLine":177,"endColumn":43},{"ruleId":"152","severity":1,"message":"171","line":199,"column":8,"nodeType":"154","endLine":199,"endColumn":35,"suggestions":"172"},{"ruleId":"130","severity":1,"message":"173","line":4,"column":10,"nodeType":"132","messageId":"133","endLine":4,"endColumn":20},{"ruleId":"167","severity":1,"message":"174","line":10,"column":39,"nodeType":"169","messageId":"175","endLine":10,"endColumn":41},"no-native-reassign",["176"],"no-negated-in-lhs",["177"],["176"],["177"],"no-self-compare","Comparing to itself is potentially pointless.","BinaryExpression","comparingToSelf","no-unused-vars","'drawerWidth' is assigned a value but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'drawer' is assigned a value but never used.","'Redirect' is defined but never used.","'TransitionGroup' is defined but never used.","'CSSTransition' is defined but never used.","'DashboardMain' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'listArea' is assigned a value but never used.","'areaCategory' is assigned a value but never used.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'match.params.userId'. Either include it or remove the dependency array.","ArrayExpression",["178"],"React Hook useEffect has a missing dependency: 'users'. Either include it or remove the dependency array.",["179"],"'history' is assigned a value but never used.","'match' is assigned a value but never used.","'Component' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'scrollAnchorEl' is assigned a value but never used.","'pushScrollAnchorEl' is assigned a value but never used.","'findOffset' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'match.params.userId' and 'users'. Either include them or remove the dependency array.",["180"],"'withStyles' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","no-global-assign","no-unsafe-negation",{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},"Update the dependencies array to be: [history.location.pathname, match.params.userId]",{"range":"187","text":"188"},"Update the dependencies array to be: [searchValue, users]",{"range":"189","text":"190"},"Update the dependencies array to be: [history.location.pathname, match.params.userId, users]",{"range":"191","text":"192"},[4224,4251],"[history.location.pathname, match.params.userId]",[4562,4575],"[searchValue, users]",[7253,7280],"[history.location.pathname, match.params.userId, users]"]